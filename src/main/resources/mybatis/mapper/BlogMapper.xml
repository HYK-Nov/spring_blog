<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.blog.repository.BlogRepository">
    <!--    리턴 타입이 entity등의 클래스로 구성된 경우 패키지명부터 적어줌  -->
    <select id="findAll" resultType="com.spring.blog.entity.Blog">
        SELECT
            blog_id,
            writer,
            blog_title,
            blog_content,
            published_at,
            updated_at,
            blog_count
        FROM blog
    </select>
    <select id="findById" resultType="com.spring.blog.entity.Blog">
        SELECT
            blog_id,
            writer,
            blog_title,
            blog_content,
            published_at,
            updated_at,
            blog_count
        FROM blog
        WHERE blog_id = #{blogId}
    </select>
    <insert id="save" parameterType="com.spring.blog.entity.Blog">
        INSERT INTO
            blog (writer, blog_title, blog_content)
        VALUES
            (#{writer}, #{blogTitle}, #{blogContent})
    </insert>
    <delete id="deleteById">
        DELETE FROM blog WHERE blog_id = #{blogId}
    </delete>
    <update id="update" parameterType="com.spring.blog.entity.Blog">
        UPDATE blog
        SET
            blog_title = #{blogTitle},
            blog_content = #{blogContent},
            updated_at = NOW()
        WHERE
            blog_id = #{blogId}
    </update>
    <update id="updateBlogCount" parameterType="com.spring.blog.entity.Blog">
        UPDATE blog
        SET
            blog_count = #{blogCount} + 1
        WHERE
            blog_id = #{blogId}
    </update>

    <!-- 테스트를 위한 쿼리문 -->
    <update id="createBlogTable">
        CREATE TABLE IF NOT EXISTS blog(
            blog_id      INT AUTO_INCREMENT PRIMARY KEY,
            writer       VARCHAR(16)   NOT NULL,
            blog_title   VARCHAR(200)  NOT NULL,
            blog_content VARCHAR(4000) NOT NULL,
            published_at DATETIME DEFAULT NOW(),
            updated_at   DATETIME DEFAULT NOW(),
            blog_count   INT      DEFAULT 0
        )
    </update>
    <update id="dropBlogTable">
        DROP TABLE blog
    </update>
    <insert id="insertTestData">
        INSERT INTO blog
        VALUES (NULL, '1번 유저', '1번 제목', '1번 본문', now(), now(), DEFAULT),
               (NULL, '2번 유저', '2번 제목', '2번 본문', now(), now(), DEFAULT),
               (NULL, '3번 유저', '3번 제목', '3번 본문', now(), now(), DEFAULT)
    </insert>
</mapper>